"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["186"],{4959:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(2885);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>SliderVerify</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>移动端的滑块验证组件</p>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>基础滑块功能与交互\n<ul>\n<li>同时支持鼠标、触摸事件 (兼容更多设备的同时，也方便日常开发和测试)</li>\n</ul>\n</li>\n<li>支持一些事件的自定义拦截处理，方便业务层做其它特殊逻辑\n<ul>\n<li>点击 <code>关闭按钮</code> 时的处理</li>\n<li>验证成功后的处理</li>\n<li>验证失败后的处理</li>\n</ul>\n</li>\n<li>抽象的 api 暴露，无需关注实现细节，自己决定调用时机\n<ul>\n<li>open 打开滑动验证组件</li>\n<li>close 关闭滑动验证组件</li>\n<li>reset 重置(刷新)滑块验证组件的视图</li>\n</ul>\n</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">demo-block</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;基础用法&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-section&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;\n          () =&gt; {\n            SliderVerifyRef?.open?.();\n          }\n        &quot;</span>\n      &gt;</span>\n        打开滑块验证码组件\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexrcc&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isVerifySuccess&quot;</span> /&gt;</span>是否验证成功\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">SliderVerify</span>\n        <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;SliderVerifyRef&quot;</span>\n        <span class="hljs-attr">:get-verify-code</span>=<span class="hljs-string">&quot;getVerifyCode&quot;</span>\n        <span class="hljs-attr">:check-verify-code</span>=<span class="hljs-string">&quot;checkVerifyCode&quot;</span>\n      /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">demo-block</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> {\n    <span class="hljs-title class_">SliderVerify</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>,\n    <span class="hljs-title class_">TVerifyCodeDatasource</span>,\n  } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>, <span class="hljs-title class_">Switch</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanSwitch</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">SliderVerifyRef</span> = ref&lt;<span class="hljs-title class_">InstanceType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">SliderVerify</span>&gt;&gt;();\n\n  <span class="hljs-keyword">const</span> isVerifySuccess = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n  <span class="hljs-comment">// 模拟接口调用</span>\n  <span class="hljs-keyword">const</span> getVerifyCode = (): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TVerifyCodeDatasource</span>&gt; =&gt; {\n    <span class="hljs-keyword">const</span> res = {\n      <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;bf576c727a9c46b2897d790204bbf40a&#x27;</span>,\n      <span class="hljs-attr">captcha</span>: {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;SLIDER&#x27;</span>,\n        <span class="hljs-attr">backgroundImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">templateImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">backgroundImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">templateImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">backgroundImageWidth</span>: <span class="hljs-number">590</span>,\n        <span class="hljs-attr">backgroundImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">templateImageWidth</span>: <span class="hljs-number">110</span>,\n        <span class="hljs-attr">templateImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">data</span>: <span class="hljs-literal">null</span>,\n      },\n    };\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>(res);\n      }, <span class="hljs-number">1000</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> checkVerifyCode = (\n    <span class="hljs-attr">p</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n  ): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>&gt; =&gt; {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-comment">// eslint-disable-next-line no-console</span>\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;checkVerifyCode payload&#x27;</span>, p);\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>({ <span class="hljs-attr">matching</span>: isVerifySuccess.<span class="hljs-property">value</span>, <span class="hljs-attr">smsSendKey</span>: <span class="hljs-string">&#x27;12345678&#x27;</span> });\n      }, <span class="hljs-number">500</span>);\n    });\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span>\n  //\n<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="dian-ji-guan-bi-an-niu-shi-de-zi-ding-yi-chu-li" tabindex="-1">点击关闭按钮时的自定义处理</h3>\n<p>props.processingClose</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">demo-block</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;点击关闭按钮时的自定义处理&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-section&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;\n          () =&gt; {\n            SliderVerifyRef?.open?.();\n          }\n        &quot;</span>\n      &gt;</span>\n        点击关闭按钮时的自定义处理\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">SliderVerify</span>\n        <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;SliderVerifyRef&quot;</span>\n        <span class="hljs-attr">:get-verify-code</span>=<span class="hljs-string">&quot;getVerifyCode&quot;</span>\n        <span class="hljs-attr">:check-verify-code</span>=<span class="hljs-string">&quot;checkVerifyCode&quot;</span>\n        <span class="hljs-attr">:processing-close</span>=<span class="hljs-string">&quot;processingClose&quot;</span>\n      /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">demo-block</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> {\n    <span class="hljs-title class_">SliderVerify</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>,\n    <span class="hljs-title class_">TSliderVerifyProcessingCloseFuncPayload</span>,\n    <span class="hljs-title class_">TVerifyCodeDatasource</span>,\n  } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> { showToast, <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">SliderVerifyRef</span> = ref&lt;<span class="hljs-title class_">InstanceType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">SliderVerify</span>&gt;&gt;();\n\n  <span class="hljs-comment">// 模拟接口调用</span>\n  <span class="hljs-keyword">const</span> getVerifyCode = (): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TVerifyCodeDatasource</span>&gt; =&gt; {\n    <span class="hljs-keyword">const</span> res = {\n      <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;bf576c727a9c46b2897d790204bbf40a&#x27;</span>,\n      <span class="hljs-attr">captcha</span>: {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;SLIDER&#x27;</span>,\n        <span class="hljs-attr">backgroundImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">templateImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">backgroundImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">templateImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">backgroundImageWidth</span>: <span class="hljs-number">590</span>,\n        <span class="hljs-attr">backgroundImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">templateImageWidth</span>: <span class="hljs-number">110</span>,\n        <span class="hljs-attr">templateImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">data</span>: <span class="hljs-literal">null</span>,\n      },\n    };\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>(res);\n      }, <span class="hljs-number">1000</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> checkVerifyCode = (\n    <span class="hljs-attr">p</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n  ): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>&gt; =&gt; {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-comment">// eslint-disable-next-line no-console</span>\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;checkVerifyCode payload&#x27;</span>, p);\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>({ <span class="hljs-attr">matching</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">smsSendKey</span>: <span class="hljs-string">&#x27;12345678&#x27;</span> });\n      }, <span class="hljs-number">500</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">processingClose</span> = (<span class="hljs-params">p: TSliderVerifyProcessingCloseFuncPayload</span>) =&gt; {\n    <span class="hljs-keyword">const</span> { close } = p;\n    <span class="hljs-keyword">let</span> delay = <span class="hljs-number">2</span>;\n    <span class="hljs-title function_">showToast</span>(<span class="hljs-string">`<span class="hljs-subst">${delay}</span>s 后关闭`</span>);\n    <span class="hljs-built_in">setTimeout</span>(close, delay * <span class="hljs-number">1000</span>);\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span>\n  //\n<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="chu-fa-yan-zheng-shi-de-zi-ding-yi-chu-li" tabindex="-1">触发验证时的自定义处理</h3>\n<p>props.processingVerifySuccess</p>\n<p>props.processingVerifyFailed</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">demo-block</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;触发验证时的自定义处理&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-section&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;\n          () =&gt; {\n            SliderVerifyRef?.open?.();\n          }\n        &quot;</span>\n      &gt;</span>\n        open\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;flexrcc&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isVerifySuccess&quot;</span> /&gt;</span>是否验证成功\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">SliderVerify</span>\n        <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;SliderVerifyRef&quot;</span>\n        <span class="hljs-attr">:get-verify-code</span>=<span class="hljs-string">&quot;getVerifyCode&quot;</span>\n        <span class="hljs-attr">:check-verify-code</span>=<span class="hljs-string">&quot;checkVerifyCode&quot;</span>\n        <span class="hljs-attr">:processing-verify-success</span>=<span class="hljs-string">&quot;processingVerifySuccess&quot;</span>\n        <span class="hljs-attr">:processing-verify-failed</span>=<span class="hljs-string">&quot;processingVerifyFailed&quot;</span>\n      /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">demo-block</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> {\n    <span class="hljs-title class_">SliderVerify</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n    <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>,\n    <span class="hljs-title class_">TProcessingSliderVerifyFailedFuncPayload</span>,\n    <span class="hljs-title class_">TProcessingSliderVerifySuccessFuncPayload</span>,\n    <span class="hljs-title class_">TVerifyCodeDatasource</span>,\n  } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> {\n    showConfirmDialog,\n    showToast,\n    <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>,\n    <span class="hljs-title class_">Switch</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanSwitch</span>,\n  } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">SliderVerifyRef</span> = ref&lt;<span class="hljs-title class_">InstanceType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">SliderVerify</span>&gt;&gt;();\n\n  <span class="hljs-keyword">const</span> isVerifySuccess = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n  <span class="hljs-comment">// 模拟接口调用</span>\n  <span class="hljs-keyword">const</span> getVerifyCode = (): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TVerifyCodeDatasource</span>&gt; =&gt; {\n    <span class="hljs-keyword">const</span> res = {\n      <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;bf576c727a9c46b2897d790204bbf40a&#x27;</span>,\n      <span class="hljs-attr">captcha</span>: {\n        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;SLIDER&#x27;</span>,\n        <span class="hljs-attr">backgroundImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">templateImage</span>: <span class="hljs-string">&#x27;xxx&#x27;</span>,\n        <span class="hljs-attr">backgroundImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">templateImageTag</span>: <span class="hljs-string">&#x27;default&#x27;</span>,\n        <span class="hljs-attr">backgroundImageWidth</span>: <span class="hljs-number">590</span>,\n        <span class="hljs-attr">backgroundImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">templateImageWidth</span>: <span class="hljs-number">110</span>,\n        <span class="hljs-attr">templateImageHeight</span>: <span class="hljs-number">360</span>,\n        <span class="hljs-attr">data</span>: <span class="hljs-literal">null</span>,\n      },\n    };\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>(res);\n      }, <span class="hljs-number">1000</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> checkVerifyCode = (\n    <span class="hljs-attr">_p</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n  ): <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>&gt; =&gt; {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>({ <span class="hljs-attr">matching</span>: isVerifySuccess.<span class="hljs-property">value</span>, <span class="hljs-attr">smsSendKey</span>: <span class="hljs-string">&#x27;12345678&#x27;</span> });\n      }, <span class="hljs-number">500</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">processingVerifySuccess</span> = (<span class="hljs-params">\n    p: TProcessingSliderVerifySuccessFuncPayload,\n  </span>) =&gt; {\n    <span class="hljs-keyword">const</span> { checkVerifyCodePayload, checkVerifyRes, close } = p;\n    <span class="hljs-title function_">showConfirmDialog</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;验证结果&#x27;</span>,\n      <span class="hljs-attr">message</span>: <span class="hljs-string">`matching: <span class="hljs-subst">${checkVerifyRes.matching}</span>`</span>,\n    })\n      .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">let</span> delay = <span class="hljs-number">2</span>;\n        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">`<span class="hljs-subst">${delay}</span>s 后关闭`</span>);\n        <span class="hljs-built_in">setTimeout</span>(close, delay * <span class="hljs-number">1000</span>);\n      })\n      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title class_">SliderVerifyRef</span>.<span class="hljs-property">value</span>?.<span class="hljs-property">reset</span>?.();\n      })\n      .<span class="hljs-title function_">finally</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-comment">// eslint-disable-next-line no-console</span>\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(checkVerifyCodePayload);\n      });\n  };\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">processingVerifyFailed</span> = (<span class="hljs-params">\n    p: TProcessingSliderVerifyFailedFuncPayload,\n  </span>) =&gt; {\n    <span class="hljs-keyword">const</span> { checkVerifyCodePayload, checkVerifyRes, close } = p;\n    <span class="hljs-title function_">showConfirmDialog</span>({\n      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;验证结果&#x27;</span>,\n      <span class="hljs-attr">message</span>: <span class="hljs-string">`matching: <span class="hljs-subst">${checkVerifyRes.matching}</span>`</span>,\n    })\n      .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">let</span> delay = <span class="hljs-number">1</span>;\n        <span class="hljs-title function_">showToast</span>(<span class="hljs-string">`<span class="hljs-subst">${delay}</span>s 后关闭`</span>);\n        <span class="hljs-built_in">setTimeout</span>(close, delay * <span class="hljs-number">1000</span>);\n      })\n      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title class_">SliderVerifyRef</span>.<span class="hljs-property">value</span>?.<span class="hljs-property">reset</span>?.();\n      })\n      .<span class="hljs-title function_">finally</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-comment">// eslint-disable-next-line no-console</span>\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(checkVerifyCodePayload);\n      });\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span>\n  //\n<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<pre><code>TSliderVerifyProps\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数</th>\n<th style="text-align:left">说明</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">getVerifyCode</td>\n<td style="text-align:left">获取验证码数据源函数</td>\n<td style="text-align:left"><code>() =&gt; Promise&lt;TVerifyCodeDatasource&gt;</code></td>\n<td style="text-align:left">-</td>\n</tr>\n<tr>\n<td style="text-align:left">checkVerifyCode</td>\n<td style="text-align:left">验证码校验函数</td>\n<td style="text-align:left"><code>(p: TCheckSliderVerifyCodeFuncPayload) =&gt; Promise&lt;TCheckSliderVerifyCodeFuncRes&gt;</code></td>\n<td style="text-align:left">-</td>\n</tr>\n<tr>\n<td style="text-align:left">processingClose</td>\n<td style="text-align:left">自定义处理点击按钮关闭的逻辑</td>\n<td style="text-align:left"><code>(p: TSliderVerifyProcessingCloseFuncPayload) =&gt; any</code></td>\n<td style="text-align:left">-</td>\n</tr>\n<tr>\n<td style="text-align:left">processingVerifySuccess</td>\n<td style="text-align:left">自定义处理验证成功逻辑</td>\n<td style="text-align:left"><code>(p: TProcessingSliderVerifySuccessFuncPayload) =&gt; any</code></td>\n<td style="text-align:left">-</td>\n</tr>\n<tr>\n<td style="text-align:left">processingVerifyFailed</td>\n<td style="text-align:left">自定义处理验证失败逻辑</td>\n<td style="text-align:left"><code>(p: TProcessingSliderVerifyFailedFuncPayload) =&gt; any</code></td>\n<td style="text-align:left">-</td>\n</tr>\n</tbody>\n</table>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TCurrentCaptchaConfig</span> = {\n  <span class="hljs-attr">startSlidingTime</span>: <span class="hljs-title class_">Date</span>;\n  <span class="hljs-attr">endSlidingTime</span>: <span class="hljs-title class_">Date</span>;\n  <span class="hljs-attr">trackList</span>: <span class="hljs-built_in">any</span>[];\n\n  <span class="hljs-attr">bgImageWidth</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">bgImageHeight</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">templateImageWidth</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">templateImageHeight</span>: <span class="hljs-built_in">number</span>;\n\n  <span class="hljs-attr">end</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">startX</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">startY</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">isMoving</span>: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">moveX</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">movePercent</span>: <span class="hljs-built_in">number</span>;\n};\n\n<span class="hljs-comment">// getVerifyCode 函数的类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TVerifyCodeDatasource</span> = {\n  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">captcha</span>: {\n    <span class="hljs-comment">// 背景图片</span>\n    <span class="hljs-attr">backgroundImage</span>: <span class="hljs-built_in">string</span>;\n    <span class="hljs-attr">backgroundImageWidth</span>: <span class="hljs-built_in">number</span>;\n    <span class="hljs-attr">backgroundImageHeight</span>: <span class="hljs-built_in">number</span>;\n    <span class="hljs-comment">// 滑块图片;</span>\n    <span class="hljs-attr">templateImage</span>: <span class="hljs-built_in">string</span>;\n    <span class="hljs-attr">templateImageWidth</span>: <span class="hljs-built_in">number</span>;\n    <span class="hljs-attr">templateImageHeight</span>: <span class="hljs-built_in">number</span>;\n  };\n};\n\n<span class="hljs-comment">// checkVerifyCode 函数类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span> = {\n  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">captchaInfo</span>: <span class="hljs-title class_">TCurrentCaptchaConfig</span>;\n};\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span> = {\n  <span class="hljs-attr">matching</span>: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">smsSendKey</span>: <span class="hljs-built_in">string</span>;\n};\n\n<span class="hljs-comment">// processingClose 函数类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TSliderVerifyProcessingCloseFuncPayload</span> = {\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n\n<span class="hljs-comment">// processingVerifySuccess 函数类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TProcessingSliderVerifySuccessFuncPayload</span> = {\n  <span class="hljs-attr">checkVerifyCodePayload</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>;\n  <span class="hljs-attr">checkVerifyRes</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>;\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n\n<span class="hljs-comment">// processingVerifyFailed 函数类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TProcessingSliderVerifyFailedFuncPayload</span> = {\n  <span class="hljs-attr">checkVerifyCodePayload</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>;\n  <span class="hljs-attr">checkVerifyRes</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>;\n  <span class="hljs-attr">close</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n\n<span class="hljs-comment">// 组件 Props 类型</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TSliderVerifyProps</span> = {\n  <span class="hljs-comment">// 获取验证码数据源函数</span>\n  <span class="hljs-attr">getVerifyCode</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TVerifyCodeDatasource</span>&gt;;\n  <span class="hljs-comment">// 验证码校验函数</span>\n  <span class="hljs-attr">checkVerifyCode</span>: <span class="hljs-function">(<span class="hljs-params">\n    <span class="hljs-attr">p</span>: <span class="hljs-title class_">TCheckSliderVerifyCodeFuncPayload</span>,\n  </span>) =&gt;</span> <span class="hljs-title class_">Promise</span>&lt;<span class="hljs-title class_">TCheckSliderVerifyCodeFuncRes</span>&gt;;\n  <span class="hljs-comment">// 自定义处理点击按钮关闭的逻辑</span>\n  <span class="hljs-attr">processingClose</span>?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">p</span>: <span class="hljs-title class_">TSliderVerifyProcessingCloseFuncPayload</span></span>) =&gt;</span> <span class="hljs-built_in">any</span>;\n  <span class="hljs-comment">// 自定义处理验证成功逻辑</span>\n  <span class="hljs-attr">processingVerifySuccess</span>?: <span class="hljs-function">(<span class="hljs-params">\n    <span class="hljs-attr">p</span>: <span class="hljs-title class_">TProcessingSliderVerifySuccessFuncPayload</span>,\n  </span>) =&gt;</span> <span class="hljs-built_in">any</span>;\n  <span class="hljs-comment">// 自定义处理验证失败逻辑</span>\n  <span class="hljs-attr">processingVerifyFailed</span>?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">p</span>: <span class="hljs-title class_">TProcessingSliderVerifyFailedFuncPayload</span></span>) =&gt;</span> <span class="hljs-built_in">any</span>;\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">方法名</th>\n<th style="text-align:left">说明</th>\n<th style="text-align:left">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">open</td>\n<td style="text-align:left">打开滑动验证组件</td>\n<td style="text-align:left"><code>() =&gt; void</code></td>\n</tr>\n<tr>\n<td style="text-align:left">close</td>\n<td style="text-align:left">关闭滑动验证组件</td>\n<td style="text-align:left"><code>() =&gt; void</code></td>\n</tr>\n<tr>\n<td style="text-align:left">reset</td>\n<td style="text-align:left">重置(刷新)滑块验证组件的视图</td>\n<td style="text-align:left"><code>reset: () =&gt; Promise&lt;void&gt;</code></td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);