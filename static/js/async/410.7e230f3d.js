"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["410"],{6581:function(s,n,a){a.r(n),a.d(n,{default:function(){return p}});var t=a(2885);let l=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,t.wg)(),(0,t.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>useCountdown</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>基于 Vue 3 Composition API 的倒计时 Hook，提供精确的倒计时功能和丰富的配置选项。</p>\n<ul>\n<li>支持毫秒级精度倒计时</li>\n<li>内置时间格式化功能</li>\n<li>支持服务器时间同步</li>\n<li>自动清理资源，避免内存泄漏</li>\n</ul>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>可配置的刷新间隔和同步频率</li>\n<li>支持自动开始和手动控制</li>\n<li>提供格式化时间字符串</li>\n<li>支持服务器时间同步校正</li>\n</ul>\n<p><strong>对开发者的解脱</strong></p>\n<ul>\n<li>无需手动处理定时器清理</li>\n<li>避免倒计时误差累积</li>\n<li>简化时间格式化处理</li>\n<li>提供完整的生命周期管理</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;countdown-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>剩余时间: {{ formattedTime }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>剩余毫秒: {{ remainingMs }}ms<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>状态: {{ isRunning ? &#x27;运行中&#x27; : &#x27;已停止&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;start&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;isRunning&quot;</span>&gt;</span>开始<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;stop&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;!isRunning&quot;</span>&gt;</span>停止<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;reset&quot;</span>&gt;</span>重置<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> useCountdown <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./useCountdown&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> { remainingMs, formattedTime, isRunning, start, stop, reset } = <span class="hljs-title function_">useCountdown</span>(<span class="hljs-number">60000</span>, {\n    <span class="hljs-attr">interval</span>: <span class="hljs-number">1000</span>,\n    <span class="hljs-attr">autoStart</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">onEnd</span>: <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;倒计时结束&#x27;</span>);\n    },\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.countdown-demo</span> {\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="fu-wu-qi-shi-jian-tong-bu" tabindex="-1">服务器时间同步</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sync-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>同步倒计时: {{ formattedTime }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;startSync&quot;</span>&gt;</span>开始同步倒计时<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> useCountdown <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n\n  <span class="hljs-comment">// 模拟服务器时间同步函数</span>\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">mockSyncFn</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-comment">// 这里模拟API请求，实际项目中替换为真实的API调用</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>&lt;number&gt;(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-comment">// 返回服务器计算的剩余时间（毫秒）</span>\n        <span class="hljs-title function_">resolve</span>(<span class="hljs-number">120000</span>); <span class="hljs-comment">// 2分钟</span>\n      }, <span class="hljs-number">500</span>);\n    });\n  };\n\n  <span class="hljs-keyword">const</span> { formattedTime, start } = <span class="hljs-title function_">useCountdown</span>(<span class="hljs-number">0</span>, {\n    <span class="hljs-attr">syncInterval</span>: <span class="hljs-number">30000</span>, <span class="hljs-comment">// 每30秒同步一次</span>\n    <span class="hljs-attr">syncFn</span>: mockSyncFn,\n    <span class="hljs-attr">autoStart</span>: <span class="hljs-literal">false</span>,\n  });\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">startSync</span> = (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-title function_">start</span>();\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zi-ding-yi-shi-jian-ge-shi" tabindex="-1">自定义时间格式</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;format-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>标准格式: {{ formattedTime }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>自定义格式: {{ customFormat }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { computed } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> useCountdown, { formatMillisecondsToMMSS } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> { remainingMs, formattedTime } = <span class="hljs-title function_">useCountdown</span>(<span class="hljs-number">3661000</span>, {\n    <span class="hljs-attr">interval</span>: <span class="hljs-number">1000</span>,\n  });\n\n  <span class="hljs-comment">// 自定义格式化显示</span>\n  <span class="hljs-keyword">const</span> customFormat = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-title function_">formatMillisecondsToMMSS</span>(remainingMs.<span class="hljs-property">value</span>, <span class="hljs-literal">true</span>);\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="hook-can-shu" tabindex="-1">Hook 参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>initialMs</td>\n<td>初始倒计时时间（毫秒）</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>配置选项</td>\n<td>UseCountdownOptions</td>\n<td>{}</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="usecountdownoptions" tabindex="-1">UseCountdownOptions</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>interval</td>\n<td>刷新间隔（毫秒）</td>\n<td>number</td>\n<td>200</td>\n</tr>\n<tr>\n<td>onEnd</td>\n<td>倒计时结束回调函数</td>\n<td>() =&gt; void</td>\n<td>() =&gt; {}</td>\n</tr>\n<tr>\n<td>autoStart</td>\n<td>是否自动开始</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>syncInterval</td>\n<td>服务器同步间隔（毫秒）</td>\n<td>number</td>\n<td>60000</td>\n</tr>\n<tr>\n<td>syncFn</td>\n<td>服务器同步函数</td>\n<td>() =&gt; Promise<number></td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>remainingMs</td>\n<td>剩余时间（毫秒）</td>\n<td>Ref&lt;number&gt;</td>\n</tr>\n<tr>\n<td>formattedTime</td>\n<td>格式化后的时间字符串（HH:MM:SS）</td>\n<td>Ref&lt;string&gt;</td>\n</tr>\n<tr>\n<td>isRunning</td>\n<td>是否正在运行</td>\n<td>Ref&lt;boolean&gt;</td>\n</tr>\n<tr>\n<td>start</td>\n<td>开始倒计时</td>\n<td>() =&gt; void</td>\n</tr>\n<tr>\n<td>stop</td>\n<td>停止倒计时</td>\n<td>() =&gt; void</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>重置倒计时</td>\n<td>(newMs?: number) =&gt; void</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="gong-ju-han-shu" tabindex="-1">工具函数</h3>\n<h4 id="formatmillisecondstommss" tabindex="-1">formatMillisecondsToMMSS</h4>\n<p>将毫秒数转换为时间格式字符串</p>\n<pre><code class="language-typescript"><span class="hljs-comment">/**\n * 将毫秒数转换为 MM:SS 格式\n * <span class="hljs-doctag">@param</span> ms 剩余毫秒数\n * <span class="hljs-doctag">@param</span> showHours 超过60分钟时是否显示小时\n * <span class="hljs-doctag">@returns</span> 格式化的时间字符串\n */</span>\n<span class="hljs-title function_">formatMillisecondsToMMSS</span>(<span class="hljs-attr">ms</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">showHours</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>): <span class="hljs-built_in">string</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="shi-yong-shuo-ming" tabindex="-1">使用说明</h3>\n<ol>\n<li><strong>基本使用</strong>: 传入初始毫秒数即可创建倒计时</li>\n<li><strong>精度控制</strong>: 通过 <code>interval</code> 参数控制刷新频率，值越小精度越高但性能消耗越大</li>\n<li><strong>服务器同步</strong>: 使用 <code>syncFn</code> 和 <code>syncInterval</code> 可保持与服务器时间同步</li>\n<li><strong>内存安全</strong>: 组件卸载时自动清理定时器，无需手动管理</li>\n<li><strong>格式化</strong>: 内置 <code>HH:MM:SS</code> 格式，也可使用工具函数自定义格式</li>\n</ol>\n</div><div class="van-doc-card"><h3 id="zhu-yi-shi-xiang" tabindex="-1">注意事项</h3>\n<ul>\n<li>建议 <code>interval</code> 不小于 200ms 以避免性能问题</li>\n<li>服务器同步功能需要提供返回 <code>Promise&lt;number&gt;</code> 的同步函数</li>\n<li>在组件卸载时会自动清理资源，但手动调用 <code>stop()</code> 可以提前释放资源</li>\n<li>使用 <code>reset()</code> 方法可以重新开始倒计时，可选传入新的初始时间</li>\n</ul>\n</div>'},null,8,l))}}}]);