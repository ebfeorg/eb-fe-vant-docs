"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["923"],{330:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(2885);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>useTimeRangeChecker</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>基于 Vue 3 Composition API 的时间区间检查 Hook，提供高效的时间范围判断功能，采用全局单例时间管理器优化性能。</p>\n<ul>\n<li>支持动态时间区间检查</li>\n<li>全局共享时间源，避免重复定时器</li>\n<li>自动清理过期订阅，优化资源使用</li>\n<li>支持实时时间区间状态监控</li>\n</ul>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>实时判断当前时间是否在指定区间内</li>\n<li>支持动态更新开始和结束时间</li>\n<li>自动管理定时器生命周期</li>\n<li>智能取消过期的时间订阅</li>\n</ul>\n<p><strong>对开发者的解脱</strong></p>\n<ul>\n<li>无需手动管理定时器</li>\n<li>避免多个组件重复创建时间检查</li>\n<li>自动处理时间区间过期情况</li>\n<li>提供简洁的 API 接口</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;time-range-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>当前时间: {{ currentTime }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>时间区间状态: {{ isInTimeRange ? &#x27;在区间内&#x27; : &#x27;在区间外&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;extendEndTime&quot;</span>&gt;</span>延长1小时<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> { computed } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> dayjs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;dayjs&#x27;</span>;\n  <span class="hljs-keyword">import</span> { useTimeRangeChecker } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> { isInTimeRange, updateEndTime } = <span class="hljs-title function_">useTimeRangeChecker</span>({\n    <span class="hljs-attr">startTime</span>: <span class="hljs-title function_">dayjs</span>(),\n    <span class="hljs-attr">endTime</span>: <span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;minute&#x27;</span>),\n  });\n\n  <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>));\n\n  <span class="hljs-comment">// 延长结束时间</span>\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">extendEndTime</span> = (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-title function_">updateEndTime</span>(<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;hour&#x27;</span>));\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="dong-tai-shi-jian-qu-jian-guan-li" tabindex="-1">动态时间区间管理</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dynamic-range-demo&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>活动状态: {{ statusText }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>开始时间: {{ startTimeFormat }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>结束时间: {{ endTimeFormat }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateStart&quot;</span>&gt;</span>修改开始时间<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateEnd&quot;</span>&gt;</span>修改结束时间<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref, computed } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> dayjs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;dayjs&#x27;</span>;\n  <span class="hljs-keyword">import</span> { useTimeRangeChecker } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> startTime = <span class="hljs-title function_">ref</span>(<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">subtract</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;hour&#x27;</span>));\n  <span class="hljs-keyword">const</span> endTime = <span class="hljs-title function_">ref</span>(<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;hour&#x27;</span>));\n\n  <span class="hljs-keyword">const</span> { isInTimeRange, updateStartTime, updateEndTime } = <span class="hljs-title function_">useTimeRangeChecker</span>({\n    <span class="hljs-attr">startTime</span>: startTime.<span class="hljs-property">value</span>,\n    <span class="hljs-attr">endTime</span>: endTime.<span class="hljs-property">value</span>,\n  });\n\n  <span class="hljs-keyword">const</span> statusText = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> (isInTimeRange.<span class="hljs-property">value</span> ? <span class="hljs-string">&#x27;活动进行中&#x27;</span> : <span class="hljs-string">&#x27;活动未开始或已结束&#x27;</span>));\n\n  <span class="hljs-keyword">const</span> startTimeFormat = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> startTime.<span class="hljs-property">value</span>.<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;HH:mm:ss&#x27;</span>));\n  <span class="hljs-keyword">const</span> endTimeFormat = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> endTime.<span class="hljs-property">value</span>.<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;HH:mm:ss&#x27;</span>));\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">updateStart</span> = (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-keyword">const</span> newStart = <span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">subtract</span>(<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;minute&#x27;</span>);\n    startTime.<span class="hljs-property">value</span> = newStart;\n    <span class="hljs-title function_">updateStartTime</span>(newStart);\n  };\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">updateEnd</span> = (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-keyword">const</span> newEnd = <span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;hour&#x27;</span>);\n    endTime.<span class="hljs-property">value</span> = newEnd;\n    <span class="hljs-title function_">updateEndTime</span>(newEnd);\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="duo-ge-zu-jian-gong-xiang-shi-jian-yuan" tabindex="-1">多个组件共享时间源</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;multiple-components&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;component-a&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>组件A<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>状态: {{ statusA ? &#x27;有效&#x27; : &#x27;无效&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;component-b&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>组件B<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>状态: {{ statusB ? &#x27;有效&#x27; : &#x27;无效&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useTimeRangeChecker } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n\n  <span class="hljs-comment">// 多个组件使用同一个时间管理器实例</span>\n  <span class="hljs-keyword">const</span> { <span class="hljs-attr">isInTimeRange</span>: statusA } = <span class="hljs-title function_">useTimeRangeChecker</span>({\n    <span class="hljs-attr">startTime</span>: <span class="hljs-string">&#x27;2024-01-01 00:00:00&#x27;</span>,\n    <span class="hljs-attr">endTime</span>: <span class="hljs-string">&#x27;2024-12-31 23:59:59&#x27;</span>,\n  });\n\n  <span class="hljs-keyword">const</span> { <span class="hljs-attr">isInTimeRange</span>: statusB } = <span class="hljs-title function_">useTimeRangeChecker</span>({\n    <span class="hljs-attr">startTime</span>: <span class="hljs-string">&#x27;2024-06-01 00:00:00&#x27;</span>,\n    <span class="hljs-attr">endTime</span>: <span class="hljs-string">&#x27;2024-06-30 23:59:59&#x27;</span>,\n  });\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="hook-can-shu" tabindex="-1">Hook 参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>startTime</td>\n<td>开始时间</td>\n<td>string | Date | Dayjs | null</td>\n<td>null</td>\n</tr>\n<tr>\n<td>endTime</td>\n<td>结束时间</td>\n<td>string | Date | Dayjs | null</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>isInTimeRange</td>\n<td>当前时间是否在区间内</td>\n<td>ComputedRef&lt;boolean&gt;</td>\n</tr>\n<tr>\n<td>updateStartTime</td>\n<td>更新开始时间</td>\n<td>(newStartTime: timeType) =&gt; void</td>\n</tr>\n<tr>\n<td>updateEndTime</td>\n<td>更新结束时间</td>\n<td>(newEndTime: timeType) =&gt; void</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="quan-ju-shi-jian-guan-li-qi" tabindex="-1">全局时间管理器</h3>\n<p><code>GlobalTimeManager</code> 是一个单例类，负责管理全局时间源和订阅者：</p>\n<pre><code class="language-typescript"><span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalTimeManager</span> {\n  <span class="hljs-keyword">static</span> <span class="hljs-title function_">getInstance</span>(): <span class="hljs-title class_">GlobalTimeManager</span>;\n  <span class="hljs-title function_">subscribe</span>(<span class="hljs-attr">callback</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>): <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-title function_">getTime</span>(): <span class="hljs-title class_">Dayjs</span>;\n}\n</code></pre>\n</div><div class="van-doc-card"><h3 id="shi-yong-shuo-ming" tabindex="-1">使用说明</h3>\n<ol>\n<li><strong>基本使用</strong>: 传入开始和结束时间即可创建时间区间检查</li>\n<li><strong>动态更新</strong>: 使用 <code>updateStartTime</code> 和 <code>updateEndTime</code> 可以动态修改时间区间</li>\n<li><strong>性能优化</strong>: 多个组件使用时会共享同一个时间管理器，避免重复创建定时器</li>\n<li><strong>自动清理</strong>: 当时间超过结束时间时，会自动取消订阅以节省资源</li>\n<li><strong>时间格式</strong>: 支持多种时间格式（字符串、Date 对象、Dayjs 对象）</li>\n</ol>\n</div><div class="van-doc-card"><h3 id="zhu-yi-shi-xiang" tabindex="-1">注意事项</h3>\n<ul>\n<li>默认时间区间检查精度为 1.5 秒</li>\n<li>当结束时间为空时，始终返回 true</li>\n<li>当开始时间为空时，判断逻辑为当前时间是否在结束时间之前</li>\n<li>组件卸载时会自动取消订阅，无需手动清理</li>\n</ul>\n</div>'},null,8,t))}}}]);