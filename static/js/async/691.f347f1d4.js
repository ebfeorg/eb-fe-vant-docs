"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["691"],{7864:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(2885);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>FieldDatePicker</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>基于 DatePicker 以及 vant 的 field 组件进行二次封装，方便处理表单中的时间选择需求场景。</p>\n<ul>\n<li>支持传入所有 DatePicker props（类型 TDatePickerProps）</li>\n<li>支持传入所有的 <a href="https://vant-ui.github.io/vant/#/zh-CN/field#props" target="_blank">vant field props</a></li>\n</ul>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>集成 DatePicker 所有功能</li>\n</ul>\n<p><strong>对开发者的解脱</strong></p>\n<ul>\n<li>符合 ui 设计</li>\n<li>默认场景下 van-field 绑定值就是展示值，FieldDatePicker 内部将绑定值与展示值表单真正需要收集的值分隔开。</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-form</span>\n    <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;FormRef&quot;</span>\n    <span class="hljs-attr">:validate-trigger</span>=<span class="hljs-string">&quot;[&#x27;onBlur&#x27;, &#x27;onChange&#x27;, &#x27;onSubmit&#x27;]&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>modelValue:{{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">FieldDatePicker</span>\n      <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;FieldDatePickerRef&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n      <span class="hljs-attr">:field-props</span>=<span class="hljs-string">&quot;{\n        name: &#x27;dateField&#x27;,\n        label: &#x27;FieldDatePicker&#x27;,\n        labelWidth: &#x27;12.5rem&#x27;,\n        readonly: false,\n        required: true,\n        rules: [{ required: true, message: &#x27;请选择&#x27; }],\n      }&quot;</span>\n      <span class="hljs-attr">:show-value-formatter</span>=<span class="hljs-string">&quot;(date) =&gt; date?.toLocaleDateString()&quot;</span>\n      <span class="hljs-attr">:picker-props</span>=<span class="hljs-string">&quot;{ title: &#x27;选择&#x27; }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">columns-top</span>&gt;</span>Ashutefannao<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">FieldDatePicker</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;testFieldModelValue&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;testField&quot;</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;testField&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ required: true, message: &#x27;请选择&#x27; }]&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;\n      () =&gt; {\n        FormRef?.validate?.().finally(() =&gt; {\n          console.log(FormRef?.getValues?.());\n        });\n      }\n    &quot;</span>\n  &gt;</span>\n    验证\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">FieldDatePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> {\n    <span class="hljs-title class_">Form</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanForm</span>,\n    <span class="hljs-title class_">Field</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanField</span>,\n    <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>,\n    <span class="hljs-title class_">FormInstance</span>,\n  } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">FormRef</span> = ref&lt;<span class="hljs-title class_">FormInstance</span>&gt;();\n\n  <span class="hljs-keyword">const</span> [modelValue] = <span class="hljs-title function_">useWrapperRef</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">FieldDatePickerRef</span> = ref&lt;<span class="hljs-title class_">InstanceType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">FieldDatePicker</span>&gt;&gt;();\n\n  <span class="hljs-keyword">const</span> [testFieldModelValue] = <span class="hljs-title function_">useWrapperRef</span>(<span class="hljs-string">&#x27;&#x27;</span>);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<p>TDatePickerProps &amp; <a href="https://vant-ui.github.io/vant/#/zh-CN/field#props" target="_blank">FieldProps</a></p>\n</div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<p>支持暴露所有 DatePicker Slots</p>\n</div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<p>支持暴露所有 DatePicker 方法</p>\n</div>'},null,8,t))}}}]);