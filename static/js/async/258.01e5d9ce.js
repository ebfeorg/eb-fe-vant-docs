"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["258"],{4367:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(2885);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>FieldSwitchBtn</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>基于 vant 的 field 组件进行二次封装，方便处理表单中的选择按钮场景。</p>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>内置默认选项</li>\n<li>支持自定义选项</li>\n</ul>\n<p><strong>对开发者的解脱</strong></p>\n<ul>\n<li>符合 ui 设计</li>\n<li>内部兼容 disable、readonly 场景的逻辑、样式处理</li>\n<li>展示值与表单收集值的逻辑隔离</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<blockquote>\n<p>van-field 组件会将传入的 number 转化为 string，因此即便内置的 options 默认值是数字，最终 v-model 后也会转化成 string</p>\n<pre><code class="language-ts"><span class="hljs-keyword">const</span> <span class="hljs-attr">defaultOptions</span>: <span class="hljs-title class_">TSwitchOptions</span> = [\n  { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;是&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> },\n  { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;否&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">0</span> },\n];\n</code></pre>\n<p>由于不确定外部自定义的 value 是什么类型，所以这里没有强制做类型转换。</p>\n<p><strong>你可以通过组件暴露的 onChange 事件拿到选中的 option 的所有原始信息</strong>。</p>\n</blockquote>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">demo-block</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;基础用法&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;FormRef&quot;</span> <span class="hljs-attr">:validate-trigger</span>=<span class="hljs-string">&quot;[&#x27;onBlur&#x27;, &#x27;onChange&#x27;]&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>filedValue({{ typeof filedValue }}): {{ filedValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">FieldSwitchBtn</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;filedValue&quot;</span>\n          <span class="hljs-attr">:field-props</span>=<span class="hljs-string">&quot;{\n            name: &#x27;testField&#x27;,\n            label: &#x27;测试字段&#x27;,\n            required: true,\n            rules: [{ required: true, message: &#x27;请选择&#x27; }],\n          }&quot;</span>\n        /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleSubmit&quot;</span>&gt;</span>\n        提交\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">demo-block</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">FieldSwitchBtn</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Form</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanForm</span>, <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>, <span class="hljs-title class_">FormInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n  <span class="hljs-comment">/**\n   * 表单逻辑\n   */</span>\n  <span class="hljs-keyword">const</span> [filedValue] = useWrapperRef&lt;any&gt;(<span class="hljs-literal">undefined</span>);\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">FormRef</span> = ref&lt;<span class="hljs-title class_">FormInstance</span>&gt;();\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-title class_">FormRef</span>.<span class="hljs-property">value</span>?.<span class="hljs-title function_">validate</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-comment">// eslint-disable-next-line no-console</span>\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;getValues&#x27;</span>, <span class="hljs-title class_">FormRef</span>.<span class="hljs-property">value</span>?.<span class="hljs-property">getValues</span>?.());\n    });\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-tag">section</span> {\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0px</span> <span class="hljs-number">16px</span>;\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n    <span class="hljs-attribute">gap</span>: <span class="hljs-number">12px</span>;\n\n    <span class="hljs-selector-class">.desc</span> {\n      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n      <span class="hljs-attribute">align-self</span>: flex-start;\n      <span class="hljs-attribute">color</span>: <span class="hljs-number">#aaa</span>;\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="onchange-shi-jian" tabindex="-1">onChange 事件</h3>\n<p>你可以通过组件暴露的 onChange 事件拿到选中的 option 的所有原始信息</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">FieldSwitchBtn</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;filedValue&quot;</span>\n  <span class="hljs-attr">:field-props</span>=<span class="hljs-string">&quot;{\n    name: &#x27;testField&#x27;,\n    label: &#x27;测试字段&#x27;,\n    required: true,\n    rules: [{ required: true, message: &#x27;请选择&#x27; }],\n  }&quot;</span>\n  @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;\n    (opt) =&gt; {\n      showToast(JSON.stringify(opt));\n      setFiledValue(opt.value);\n    }\n  &quot;</span>\n/&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zi-ding-yi-options" tabindex="-1">自定义 options</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">FieldSwitchBtn</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;filedValue&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;[\n    { label: &#x27;非长期&#x27;, value: &#x27;非长期&#x27; },\n    { label: &#x27;长期&#x27;, value: &#x27;长期&#x27; },\n  ]&quot;</span>\n  <span class="hljs-attr">:field-props</span>=<span class="hljs-string">&quot;{\n    name: &#x27;validityPeriodField&#x27;,\n    label: &#x27;证件有效期&#x27;,\n    required: true,\n    rules: [{ required: true, message: &#x27;请选择&#x27; }],\n  }&quot;</span>\n/&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modelValue</td>\n<td>双向绑定值</td>\n<td>any</td>\n<td>-</td>\n</tr>\n<tr>\n<td>fieldProps</td>\n<td>field props</td>\n<td><code>Partial&lt;Omit&lt;FieldProps, \'modelValue\'&gt;&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>options</td>\n<td>自定义选项</td>\n<td><code>TSwitchOptions</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<pre><code class="language-ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TSwitchOption</span> = { <span class="hljs-attr">label</span>: <span class="hljs-built_in">string</span>; <span class="hljs-attr">value</span>: <span class="hljs-built_in">any</span> };\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TSwitchOptions</span> = [<span class="hljs-title class_">TSwitchOption</span>, <span class="hljs-title class_">TSwitchOption</span>];\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">TFieldSwitchBtnProps</span> = {\n  <span class="hljs-attr">modelValue</span>: <span class="hljs-built_in">any</span>;\n\n  <span class="hljs-attr">fieldProps</span>: <span class="hljs-title class_">Partial</span>&lt;<span class="hljs-title class_">Omit</span>&lt;<span class="hljs-title class_">FieldProps</span>, <span class="hljs-string">&#x27;modelValue&#x27;</span>&gt;&gt;;\n\n  <span class="hljs-attr">options</span>?: <span class="hljs-title class_">TSwitchOptions</span>;\n};\n</code></pre>\n</div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3>\n<p>继承 MultiPicker</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">事件名</th>\n<th style="text-align:left">说明</th>\n<th style="text-align:left">回调参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">change</td>\n<td style="text-align:left">更改选中值时触发</td>\n<td style="text-align:left"><code>TSwitchOption</code></td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);