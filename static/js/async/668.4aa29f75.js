"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["668"],{5409:function(s,a,n){n.r(a),n.d(a,{default:function(){return p}});var l=n(2885);let t=["innerHTML"],p={setup:()=>({html:""}),render:()=>((0,l.wg)(),(0,l.iD)("div",{class:"van-doc-markdown-body",innerHTML:'<h1>DateRangePicker</h1>\n<div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3>\n<p>主要基于 vant 的 popup、picker-group、date-picker 组件进行二次封装，方便处理时间选择的需求场景。</p>\n<ul>\n<li>支持传入所有 <a href="https://vant-ui.github.io/vant/#/zh-CN/date-picker#props" target="_blank">date-picker props</a></li>\n<li>支持传入所有 <a href="https://vant-ui.github.io/vant/#/zh-CN/picker-group#props" target="_blank">picker-group props</a></li>\n<li>支持暴露所有 <a href="https://vant-ui.github.io/vant/#/zh-CN/picker-group#slots" target="_blank">picker-group slots</a></li>\n</ul>\n<p><strong>主要功能描述</strong></p>\n<ul>\n<li>支持自定义触发器</li>\n<li>支持自定义展示值</li>\n<li>支持更改 picker 打开时默认选中的值（modelValue 有值，则以 modelValue 为准）</li>\n<li>支持根据选择的时间大小自动矫正 values 的顺序</li>\n<li>支持确认前的自定义拦截处理逻辑</li>\n</ul>\n<p><strong>对开发者的解脱</strong></p>\n<ul>\n<li>符合 ui 设计\n<ul>\n<li>默认处理选项的 formatter</li>\n<li>默认 title、tabs、nextStepText 配置</li>\n</ul>\n</li>\n<li>无脑的双向绑定 values，自动矫正时间顺序</li>\n<li>打开收起逻辑的编写</li>\n<li>对所选项 <code>真实值</code>、<code>展示值</code> 的隔离和处理</li>\n</ul>\n</div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2>\n<div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;基础用法&#x27; }&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow, showValue }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>value: {{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>showValue: {{ showValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span> trigger <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="ge-shi-hua-zhan-shi-zhi" tabindex="-1">格式化展示值</h3>\n<p>props：<code>showValueFormatter?: (p: { startDate?: Date; endDate?: Date }) =&gt; string</code></p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:show-value-formatter</span>=<span class="hljs-string">&quot;\n      ({ startDate, endDate }) =&gt; {\n        if (startDate &amp;&amp; endDate) {\n          return (\n            dayjs(startDate).format(&#x27;YY年MM月DD日&#x27;) +\n            &#x27; / &#x27; +\n            dayjs(endDate).format(&#x27;YY年MM月DD日&#x27;)\n          );\n        }\n      }\n    &quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;格式化展示值&#x27; }&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;\n      (p) =&gt; {\n        showToast(`dayjs(date).format(&#x27;YY年MM月DD日&#x27;))`);\n        console.log(p);\n      }\n    &quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow, showValue }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>value: {{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>showValue: {{ showValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span>\n          trigger\n        <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>, showToast } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> dayjs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;dayjs&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([\n    <span class="hljs-string">&#x27;2020-03-04&#x27;</span>,\n    <span class="hljs-string">&#x27;2030-05-06&#x27;</span>,\n  ]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zi-ding-yi-picker-da-kai-shi-mo-ren-xuan-zhong-de-zhi" tabindex="-1">自定义 picker 打开时默认选中的值</h3>\n<p>modelValue 有值，则以 modelValue 为准</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;DateRangePickerRef&quot;</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;设置 picker 默认选中项&#x27; }&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow, pickerRealtimeOptions, showValue }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>value:{{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>showValue:{{ showValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>picker 实时选中值\uD83D\uDC47<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ pickerRealtimeOptions }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>(modelValue 有值，则以 modelValue 为准)<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-space</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span>\n            trigger\n          <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>\n            @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;\n              () =&gt;\n                DateRangePickerRef?.setPickerRealtimeDate({\n                  start: &#x27;2022-02-02&#x27;,\n                  end: &#x27;2033-03-03&#x27;,\n                })\n            &quot;</span>\n          &gt;</span>\n            2022-02-02 ~ 2033-03-03\n          <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">van-space</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span>, <span class="hljs-title class_">Space</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanSpace</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title class_">DateRangePickerRef</span> = ref&lt;<span class="hljs-title class_">InstanceType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">DateRangePicker</span>&gt;&gt;();\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([\n    <span class="hljs-string">&#x27;2020-03-04&#x27;</span>,\n    <span class="hljs-string">&#x27;2030-05-06&#x27;</span>,\n  ]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="que-ren-qian-de-zi-ding-yi-lan-jie-chu-li-luo-ji" tabindex="-1">确认前的自定义拦截处理逻辑</h3>\n<p>props：<code>beforeConfirm?: (newValues: string[]) =&gt; boolean;</code></p>\n<ul>\n<li>返回 true，values 正常更新，弹窗关闭</li>\n<li>返回 false，则什么都不做</li>\n</ul>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;beforeConfirm&#x27; }&quot;</span>\n    <span class="hljs-attr">:before-confirm</span>=<span class="hljs-string">&quot;\n      (values) =&gt; {\n        const [start, end] = values;\n        if (start == dayjs().format(&#x27;YYYY-MM-DD&#x27;) &amp;&amp; start === end) {\n          return true;\n        }\n        showFailToast(&#x27;请选择当前日期&#x27;);\n        return false;\n      }\n    &quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow, showValue }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>value: {{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>showValue: {{ showValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span> trigger <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { showFailToast, <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n  <span class="hljs-keyword">import</span> dayjs <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;dayjs&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zhi-chi-suo-you-date-picker-props" tabindex="-1">支持所有 date-picker props</h3>\n<p>例如设置 columnsType 为: 月日</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;设置 columnsType&#x27; }&quot;</span>\n    <span class="hljs-attr">:picker-props</span>=<span class="hljs-string">&quot;{ columnsType: [&#x27;month&#x27;, &#x27;day&#x27;] }&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow, showValue }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>value: {{ modelValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>showValue: {{ showValue }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span> trigger <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zhi-chi-suo-you-picker-group-props" tabindex="-1">支持所有 picker-group props</h3>\n<p>例如设置 confirmButtonText</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{\n      title: &#x27;设置 confirmButtonText&#x27;,\n      confirmButtonText: &#x27;\uD83D\uDC49✅\uD83D\uDC48&#x27;,\n    }&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span> trigger <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><div class="van-doc-card"><h3 id="zhi-chi-suo-you-picker-group-slots" tabindex="-1">支持所有 picker-group slots</h3>\n<p>例如设置 toolbar</p>\n<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">DateRangePicker</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modelValue&quot;</span>\n    <span class="hljs-attr">:picker-group-props</span>=<span class="hljs-string">&quot;{ title: &#x27;设置 toolbar&#x27; }&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;{ triggerPopupShow }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;trigger-box&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;triggerPopupShow&quot;</span>&gt;</span> trigger <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">toolbar</span>&gt;</span> \uD83D\uDC49自定义工具栏\uD83D\uDC48 <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">DateRangePicker</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { useWrapperRef } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vhooks&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">DateRangePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ebfe/vant-kit&#x27;</span>;\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vant&#x27;</span>;\n\n  <span class="hljs-keyword">const</span> [modelValue] = useWrapperRef&lt;[string, string]&gt;([<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.trigger-box</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">flex-direction</span>: column;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">align-items</span>: center;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n</div><h2 id="api" tabindex="-1">API</h2>\n<div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3>\n<p>TDatePickerProps</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>modelValue</td>\n<td>值</td>\n<td><code>string[]</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>pickerProps</td>\n<td><a href="https://vant-ui.github.io/vant/#/zh-CN/date-picker#props" target="_blank">date-picker props</a></td>\n<td><code>Partial&lt;DatePickerProps&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>pickerGroupProps</td>\n<td><a href="https://vant-ui.github.io/vant/#/zh-CN/picker-group#props" target="_blank">picker-group props</a></td>\n<td><code>Partial&lt;PickerGroupProps&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>showValueFormatter</td>\n<td>自定义展示值</td>\n<td><code>showValueFormatter?: (p: { startDate?: Date; endDate?: Date }) =&gt; string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>beforeConfirm</td>\n<td>确认前的自定义拦截处理逻辑</td>\n<td><code>beforeConfirm?: (newValues: TDateRangePickerProps[\'modelValue\']) =&gt; boolean</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3>\n<p>支持暴露所有 <a href="https://vant-ui.github.io/vant/#/zh-CN/picker-group#slots" target="_blank">picker-group slots</a></p>\n<table>\n<thead>\n<tr>\n<th>插槽名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>trigger</td>\n<td>触发器</td>\n<td><code>{ showValue, triggerPopupShow, pickerRealtimeOptions}</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">方法名</th>\n<th style="text-align:left">说明</th>\n<th style="text-align:left">类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">setPickerRealtimeDate</td>\n<td style="text-align:left">设置 picker 打开时默认选中的值（modelValue 有值，则以modelValue 为准）</td>\n<td style="text-align:left"><code>(p: { start: string; end: string }) =&gt; void</code></td>\n</tr>\n</tbody>\n</table>\n</div>'},null,8,t))}}}]);